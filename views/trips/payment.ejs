<!DOCTYPE html>
<html>
  <head>
    <link href="/css/app.css" rel="stylesheet" />
    <script
      type="text/javascript"
      src="https://sandbox.web.squarecdn.com/v1/square.js"
    ></script>
    <script>

      const appId = '<%= app_id %>';
      const locationId = '<%= location_id %>'; 

      async function initializeCard(payments) {
        const card = await payments.card();
        await card.attach('#card-container');

        return card;
      }

      async function createPayment(token, verificationToken) {
        const requestBody = JSON.stringify({
          locationId,
          sourceId: token,
          verificationToken,
          idempotencyKey: window.crypto.randomUUID(),
        });

		const paymentResponse = await fetch('/trips/<%= trip._id %>/payment', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: requestBody,
        });
        if (paymentResponse.ok) {
			window.location.href = '/trips/?payment=success';
          	return paymentResponse.json();
        }
        const errorBody = await paymentResponse.text();
        throw new Error(errorBody);
      }

      async function tokenize(paymentMethod) {
        const tokenResult = await paymentMethod.tokenize();
        if (tokenResult.status === 'OK') {
          return tokenResult.token;
        } else {
          let errorMessage = `Tokenization failed with status: ${tokenResult.status}`;
          if (tokenResult.errors) {
            errorMessage += ` and errors: ${JSON.stringify(
              tokenResult.errors
            )}`;
          }

          throw new Error(errorMessage);
        }
	}

      // status is either SUCCESS or FAILURE;
      function displayPaymentResults(status) {
        const statusContainer = document.getElementById(
          'payment-status-container'
        );
		if(statusContainer){
			if (status === 'SUCCESS') {
				statusContainer.classList.remove('is-failure');
				statusContainer.classList.add('is-success');
        	} else {
				statusContainer.classList.remove('is-success');
				statusContainer.classList.add('is-failure');
			}
        	statusContainer.style.visibility = 'visible';
		}
		else{
			console.log("status container not found");
		}
      }
	  
      document.addEventListener('DOMContentLoaded', async function () {
  if (!window.Square) {
    throw new Error('Square.js failed to load properly');
  }

  const payments = window.Square.payments(appId, locationId);
  let card;
  try {
    card = await initializeCard(payments);
  } catch (e) {
    console.error('Initializing Card failed', e);
    return;
  }

  // Checkpoint 2.
  async function handlePaymentMethodSubmission(event, paymentMethod) {
    event.preventDefault();

    try {
      // disable the submit button as we await tokenization and make a
      // payment request.
      cardButton.disabled = true;
      const token = await tokenize(paymentMethod);
      const paymentResults = await createPayment(token);
      displayPaymentResults('SUCCESS');

      console.debug('Payment Success', paymentResults);
	//   res.redirect("/trips/${savedTrip._id}");
	// 	req.flash("success", "Your trip has been confirmed!");
    } catch (e) {
      cardButton.disabled = false;
      displayPaymentResults('FAILURE');
      console.error(e.message);
    }
  }

  const cardButton = document.getElementById(
    'card-button'
  );
  cardButton.addEventListener('click', async function (event) {
    await handlePaymentMethodSubmission(event, card);
  });
});

    </script>
  </head>
  <body>
    <form id="payment-form" style="max-height: 80px;">
      <div id="card-container"></div>
	  <% if (trip.tripType == "Road Trip") { %>
		<button id="card-button" type="button">Approve For $<%= trip.price.toFixed(2) %></button>
	  <% } else { %>
      <button id="card-button" type="button">Pay $<%= trip.price.toFixed(2) %></button>
	  <% } %>
    </form>
    <div id="payment-status-container"></div>
  </body>
</html>